<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" backgroundColor="#7B96B6" creationComplete="handleCreationComplete()" creationPolicy="all" xmlns:managers="weave.ui.admin.managers.*">
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.TextArea;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import weave.StringDefinition;
			import weave.Weave;
			import weave.services.AdminInterface;
			import weave.services.WeaveAdminService;
			import weave.ui.PopupDialog;
			import weave.ui.admin.LoginPopup;
			import weave.ui.admin.WizardPanel;
			import weave.ui.admin.wizards.CSVImportWizard;
			import weave.ui.admin.wizards.ForceMigrateWizard;
			import weave.ui.admin.wizards.SHPImportWizard;
			import weave.ui.admin.wizards.SQLImportWizard;
			import weave.utils.EventUtils;
			
			private static const version:String = Weave.properties.version.value;
			private var loginPopup:LoginPopup = new LoginPopup();
			
			private function handleCreationComplete():void
			{
				loginPopup.show(this);

				BindingUtils.bindSetter(handleSQLConfigExists, AdminInterface.instance, "sqlConfigExists");

				WeaveAdminService.messageLogCallbacks.addImmediateCallback(this, handleMessageLog);
				function handleMessageLog():void
				{
					messageTextArea.text = WeaveAdminService.messageLog.join('\n\n');
					messageTextArea.validateProperties();
					messageTextArea.verticalScrollPosition = messageTextArea.maxVerticalScrollPosition;
					if (messageTextArea.height == 0)
						messageTextArea.percentHeight = 15;
				}

				BindingUtils.bindSetter(handlePermissionChange, AdminInterface.instance, "currentUserIsSuperuser");
				function handlePermissionChange(isSuperuser:Boolean):void
				{
					if (isSuperuser && !tabNavigator.contains(sqlConnectionManager))
						tabNavigator.addChild(sqlConnectionManager);
					if (!isSuperuser && tabNavigator.contains(sqlConnectionManager))
						tabNavigator.removeChild(sqlConnectionManager);
				}
			}
			private function handleSQLConfigExists(exists:Boolean):void
			{
				if (!exists)
				{
					var migrateViewStack:ForceMigrateWizard = new ForceMigrateWizard();
					var migratePanel:WizardPanel = WizardPanel.createWizard(this, migrateViewStack) as WizardPanel;
					
					//we don't want the user to hit the close button before the migration step, so we disable it.
					migratePanel.cancelButton.visible = false;
					
					//When the user hits the finish button we will do a check to see if migration was sucessful. 
					//if yes, we close the wizard and direct the user to the client configuration tab
					//if no, we will leave it open (in modal mode).
					migrateViewStack.addEventListener(CloseEvent.CLOSE,function(..._):void{
							tabNavigator.selectedChild = clientConfig;
							PopUpManager.removePopUp(migratePanel);}
					);
				}
			}
		]]>
	</mx:Script>
	

	<mx:Panel
			headerHeight="25"
			title="Weave {version} Administration Console"
			width="100%"
			height="100%"
			borderAlpha="0.5" backgroundColor="#DBDBDB" cornerRadius="0"
			bottom="20" top="20" right="20" left="20"
			paddingLeft="8" paddingRight="8" paddingTop="8" paddingBottom="8">
		<mx:HBox width="100%">
			<!--mx:Button label="Import SQL data..." click="WizardPanel.createWizard(this, new SQLImportWizard())" toolTip="open dialog with wizard to import data from existing sql"/-->
			<mx:Button label="Import SQL data..." click="WizardPanel.createWizard(this, new SQLImportWizard())" toolTip="{StringDefinition.DEFAULT_IMPORT_SQL_DATA_BUTTON_TOOLTIP}"/>
			<mx:Button label="Import CSV data..." click="WizardPanel.createWizard(this, new CSVImportWizard())" toolTip="open dialog with wizard to import data from csv files, etc"/>
			<!--mx:Button label="Import shape data..." click="WizardPanel.createWizard(this, new SHPImportWizard())" toolTip="open dialog with wizard to import shape data (shapes and raw data like dbf)"/-->
			<mx:Button label="Import shape data..." click="WizardPanel.createWizard(this, new SHPImportWizard())" toolTip="{StringDefinition.DEFAULT_IMPORT_SHAPEFILE_DATA_BUTTON_LABEL}"/>
			<mx:Spacer width="100%"/>
			<mx:Label text="{'Active Connection Name: ' + ((AdminInterface.instance.activeConnectionName) ? AdminInterface.instance.activeConnectionName : 'Default')}" textAlign="right"/>
			<mx:Button label="Change database connection" enabled="{AdminInterface.instance.sqlConfigExists == true}"
					   click="AdminInterface.instance.userHasAuthenticated = false"/>
		</mx:HBox>
		<mx:HRule width="100%"/>
		<mx:VDividedBox width="100%" height="100%" >
			<mx:TabNavigator id="tabNavigator" width="100%" height="100%" paddingBottom="8" paddingLeft="8" paddingRight="8" paddingTop="8" fontSize="10">
				<managers:ClientConfigurationManager id="clientConfig"/>
				<managers:DataTableManager/>
				<managers:GeometryCollectionManager/>
				<managers:SQLConnectionManager id="sqlConnectionManager"/>
							
			</mx:TabNavigator>
			<mx:TextArea width="100%" height="0%" id="messageTextArea" editable="false">
				
			</mx:TextArea>
		</mx:VDividedBox>
		
	</mx:Panel>
	
	<!--
	<mx:VRule width="25" height="17"/>
	<mx:Button label="Import Connection(s)..." click="openImportDialog()" toolTip="open dialog with wizard to import  existing connections say to data commons, other servers, etc"/>
	<mx:VRule width="25" height="17"/>
	<mx:Button label="Load Configuration..." toolTip="would open dialog to load saved settings for the admin console (preferences)"/>
	<mx:Button label="Save Configuration..." toolTip="would open dialog to save settings for the admin console (preferences)"/>
	<mx:HBox width="100%" verticalAlign="middle">
	<mx:Button label="Add" toolTip="would add a item of type (whatever the tab selected is) to the same level as a selected item, or root if nothing selected."/>
	<mx:Button label="Remove" toolTip="would delete a selected item - with confirm dialog"/>
	</mx:HBox>
	-->					
	
</mx:Application>
