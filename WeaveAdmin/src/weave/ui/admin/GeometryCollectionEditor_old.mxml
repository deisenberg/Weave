<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:VBox
	xmlns="weave.ui.admin.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	horizontalScrollPolicy="off" verticalScrollPolicy="off" creationPolicy="all"
	width="100%" height="100%"
	creationComplete="handleCreationComplete()" xmlns:ui="weave.ui.*">
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import weave.services.beans.GeometryCollectionInfo;
			import weave.utils.PopUpUtils;
			import mx.collections.ArrayCollection;
			import mx.collections.ICollectionView;
			import mx.controls.Alert;
			
			import weave.services.AdminInterface;
			import weave.utils.EventUtils;
			
			[Bindable] private var _labelWidth:int = 150;
			
			private function handleCreationComplete():void
			{
			}
			[Bindable]
			public var dataChanged:Boolean = false;
			
			
			private var _geomInfo:GeometryCollectionInfo = null;
			
			public function set geometryCollectionInfo(info:GeometryCollectionInfo):void
			{
				// load info into UI
				nameInput.text = info.name;
				connectionCombo.selectedItem = info.connection;
				schemaInput.text = info.schema;
				tablePrefixInput.text = info.tablePrefix
				keyTypeCombo.selectedItem = info.keyType;
				importNotesInput.text = info.importNotes;
				projectionInput.text = info.projection;
			}

			private function apply():void
			{
				PopUpUtils.confirm(
						this,
						"Confirm overwrite",
						'Overwrite GeometryCollection entry "'+nameInput.text+'"?',
						save
					);
				function save():void
				{
					var info:GeometryCollectionInfo = new GeometryCollectionInfo();
					info.name = nameInput.text;
					info.connection = connectionCombo.text;
					info.schema = schemaInput.text;
					info.tablePrefix = tablePrefixInput.text;
					info.keyType = keyTypeCombo.text;
					info.importNotes = importNotesInput.text;
					info.projection = projectionInput.text;
					
					AdminInterface.instance.saveGeometryCollectionInfo(info);
					dataChanged = false;
				}
			}
			
			private function deleteGeometryCollection():void
			{
				// ask user to confirm
				PopUpUtils.confirm(
						this,
						"Confirm delete",
						'Delete GeometryCollection entry "'+nameInput.text+'"?',
						function():void
						{
							AdminInterface.instance.removeGeometryCollectionInfo(nameInput.text);
						}
					);
			}

		]]>
	</mx:Script>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Name"/>
		<mx:TextInput change="{dataChanged=true}" id="nameInput"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Connection"/>
		<ui:CustomComboBox change="{dataChanged=true}" id="connectionCombo" dataProvider="{AdminInterface.instance.connectionNames}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Key Type"/>
		<ui:CustomComboBox change="{dataChanged=true}" id="keyTypeCombo" editable="true" dataProvider="{AdminInterface.instance.keyTypes}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Schema"/>
		<mx:TextInput change="{dataChanged=true}" id="schemaInput"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Table Prefix"/>
		<mx:TextInput change="{dataChanged=true}" id="tablePrefixInput"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Projection SRS code"/>
		<mx:TextInput change="{dataChanged=true}" id="projectionInput" toolTip="Example: EPSG:4326"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label width="{_labelWidth}" text="Import Notes"/>
		<mx:TextInput change="{dataChanged=true}" id="importNotesInput"/>
	</mx:HBox>

	<mx:HBox>
	<mx:Button click="apply()" label="Apply Changes"/>
	<mx:Button click="deleteGeometryCollection()" label="Delete GeometryCollection Entry"/>
	</mx:HBox>
</mx:VBox>
