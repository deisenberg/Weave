<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<SimpleVisTool xmlns="weave.visualization.tools.*" 
	     xmlns:mx="http://www.adobe.com/2006/mxml"
	     xmlns:ui="weave.ui.*" 
		 xmlns:userControls="weave.ui.userControls.*"
		 layout="absolute">
	<mx:Script>
		<![CDATA[
			import weave.api.registerLinkableChild;
			import weave.api.linkBindableProperty;
			import weave.utils.ColumnUtils;
			import mx.events.FlexEvent;
			
			import weave.Weave;
			import weave.core.LinkableBoolean;
			import weave.core.SessionManager;
			import weave.api.getCallbackCollection;
			import weave.api.newLinkableChild;
			import weave.data.AttributeColumns.DynamicColumn;
			import weave.data.AttributeColumns.FilteredColumn;
			import weave.api.data.IAttributeColumn;
			import weave.visualization.plotters.PieChartPlotter;

			public var _plotter:PieChartPlotter = null;
			
			override protected function constructor():void
			{
				super.constructor();
				// lock dynamic objects into place
				_plotter = initDefaultPlotter(PieChartPlotter) as PieChartPlotter;
				
				visualization.enableAutoZoomToExtent.value = true;
				visualization.enableFixedAspectRatio.value = true;
				visualization.enableZoomAndPan.value = false;

				getCallbackCollection(visualization.dataBounds).addImmediateCallback(this, invalidateAxes);
				getCallbackCollection(_plotter).addImmediateCallback(this, invalidateAxes);
				invalidateAxes();
				
				
				initColumnDefaults(_plotter.data);
				toolTitle.addImmediateCallback(this, updateTitle);
				_plotter.data.addImmediateCallback(this,updateProbeColumns,null,true);
				
				visualization.marginTop.value = 25;
				visualization.marginBottom.value = 25;
			}
			
			public const includeToolAttributesInProbe:LinkableBoolean = registerLinkableChild(this, new LinkableBoolean(true), updateProbeColumns);
			
			private function updateProbeColumns():void
			{
				if(includeToolAttributesInProbe.value)
				{
					visualization.additionalProbeColumns = [];
					if (_plotter.data.internalColumn)
						visualization.additionalProbeColumns.push(_plotter.data.internalColumn);
					if (colorColumn.internalColumn)	
						visualization.additionalProbeColumns.push(colorColumn);
					if (visualization.additionalProbeColumns.length == 0)
						visualization.additionalProbeColumns = null;
				}
				else
					visualization.additionalProbeColumns = null;
				//else ProbeTextUtils.probedColumns.copyObject('probedColumns',oldProbeColumns);
			}
			
			public function get colorColumn():DynamicColumn
			{
				var fc:FilteredColumn = Weave.root.getObject(Weave.DEFAULT_COLOR_DATA_COLUMN) as FilteredColumn;
				return fc.internalDynamicColumn;
			}
			
			override public function getSelectableAttributeNames():Array
			{
				return ["Wedge Size","Wedge Color","Label"];
			}
			override public function getSelectableAttributes():Array
			{
				return [_plotter.data,colorColumn,_plotter.label];
			}
			
			private function invalidateAxes():void
			{
				updateTitle();
			}

			private function updateTitle():void
			{
				if (toolTitle.value == null)
					title = "Pie Chart of " + ColumnUtils.getTitle(_plotter.data);
			}
		]]>
	</mx:Script>
	<ui:ControlPanel>
		<mx:VBox id="attributesPanel" label="Attributes for Pie Chart">
			<userControls:ControlsSubsetBox>
				<mx:CheckBox id="probeColumnsCheckBox" label="Include tool attributes in probe tooltip"
							 toolTip="Checking this box makes all of the following attributes visible in this tool's probe tooltip"
							 initialize="linkBindableProperty(includeToolAttributesInProbe,probeColumnsCheckBox,'selected')"/>
			</userControls:ControlsSubsetBox>
			<ui:DynamicColumnComponent visTool="{this}" label="Wedge size" initialize="(event.target as DynamicColumnComponent).dynamicObject = _plotter.data"/>
			<ui:DynamicColumnComponent visTool="{this}" label="Wedge color" initialize="(event.target as DynamicColumnComponent).dynamicObject = colorColumn"/>
			<ui:DynamicColumnComponent visTool="{this}" id="labelColumInput" label="Label Column" initialize="(event.target as DynamicColumnComponent).dynamicObject = _plotter.label"/>
		</mx:VBox>
	</ui:ControlPanel>
</SimpleVisTool>
